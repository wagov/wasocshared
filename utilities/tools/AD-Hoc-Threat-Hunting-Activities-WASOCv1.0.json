{
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workbookDisplayName": {
      "type": "string",
      "defaultValue": "AD-Hoc Threat hunting activities",
      "metadata": {
        "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
      }
    },
    "workbookType": {
      "type": "string",
      "defaultValue": "sentinel",
      "metadata": {
        "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
      }
    },
    "WorkspaceName": {
        "type": "string",
        "defaultValue": "<Add log analytics workspace name>",
        "minLength": 1,
        "metadata": {
            "description": "The name of the Log Analytics workspace to which this workbook will be associated"
        }
    },
    "workbookId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    }
  },
"variables": {
	"workbookSourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('WorkspaceName'))]"
    	},
  "resources": [
    {
      "name": "[parameters('workbookId')]",
      "type": "microsoft.insights/workbooks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2022-04-01",
      "dependsOn": [],
      "kind": "shared",
      "properties": {
        "displayName": "[parameters('workbookDisplayName')]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"c3cc19f5-463e-47ba-b039-252c47f29611\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Threat Hunting Queries\",\"subTarget\":\"TH ADS\",\"style\":\"link\"},{\"id\":\"2b992c40-7e9a-419b-b739-13ce441cd0fc\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Open Source TI Detections\",\"subTarget\":\"TI\",\"style\":\"link\"},{\"id\":\"fce23985-f887-4dd2-9f50-8f37f8277e37\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Pivoting\",\"subTarget\":\"piv\",\"style\":\"link\"}]},\"name\":\"links - 10\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{Subscription}\"],\"parameters\":[{\"id\":\"04951277-d010-499c-8e9c-1967c08836b2\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subscription\",\"type\":6,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"Resources\\n| summarize Count = count() by subscriptionId\\n| order by Count desc\\n| extend Rank = row_number()\\n| project value = subscriptionId, label = subscriptionId, selected = Rank == 1\",\"crossComponentResources\":[\"value::selected\"],\"typeSettings\":{\"additionalResourceOptions\":[],\"showDefault\":false},\"timeContext\":{\"durationMs\":14400000},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"value\":[]},{\"id\":\"55ecfb10-706e-4b16-8b59-7f6107cd5975\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Workspace\",\"type\":5,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"resources | where type =~ 'Microsoft.operationsmanagement/solutions' | where name contains 'SecurityInsights' | project id = tostring(properties.workspaceResourceId)\",\"crossComponentResources\":[\"{Subscription}\"],\"typeSettings\":{\"additionalResourceOptions\":[],\"showDefault\":false},\"timeContext\":{\"durationMs\":14400000},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"85c3e11e-0568-4c21-8c6f-668f10b85231\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":14400000},\"value\":{\"durationMs\":2592000000}},{\"id\":\"62a3e14a-aca9-4f74-8816-51d91b09ed84\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Instructions\",\"label\":\"Show Instructions\",\"type\":10,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"jsonData\":\"[\\n    { \\\"value\\\":\\\"Hide\\\", \\\"label\\\":\\\"Hide\\\",\\\"selected\\\":true},\\n    { \\\"value\\\":\\\"Show\\\", \\\"label\\\":\\\"Show\\\" }\\n]\\n\",\"timeContext\":{\"durationMs\":14400000}}],\"style\":\"pills\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},\"name\":\"parameters - 3\"},{\"type\":1,\"content\":{\"json\":\"This workbook includes a range of threat hunting queries to help execute Threat Hunts.  \\n\\nThe workbook covers three segments: \\n- Threat Hunting Queries - A number of various queries to detect some of the most common attacks \\n- Open Source Thret Intelligence - Query that uses open source TI feeds to detect malicious activity   \\n- Pivoting - Queries to pivot on activities from compromised assets  to detect malicious \\n<br/><br/>\\nPlease feel free to adapt the content of this workbook to meet the needs of the Agency. For any assistance regarding this workbook contact WA SOC on cybersecurity@dpc.wa.gov.au\\n<br/><br/>\\nv1.0 August 2024  \\n\\n---\\n## Instructions:\\n1. Select Subscription and Workspace\\n2. Define Time Range of the hunting activity  \\n3. Queries will run automatically when changes occur    \\n\\nFor more Threat Hunting details refer to the [Threat Hunting Guideline](https://soc.cyber.wa.gov.au/guidelines/TTP_Hunt/ttp-detection-guidelines/) or contact WA SOC on cybersecurity@dpc.wa.gov.au\\n<br><br>\",\"style\":\"info\"},\"conditionalVisibility\":{\"parameterName\":\"Instructions\",\"comparison\":\"isEqualTo\",\"value\":\"Show\"},\"name\":\"text - 12\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Initial Access https://attack.mitre.org/tactics/TA0001/\",\"style\":\"success\"},\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let clientThreshold = 1;\\n  let scriptExtensions = dynamic([\\\".php\\\", \\\".aspx\\\", \\\".asp\\\", \\\".cfml\\\"]);\\n  let data = W3CIISLog\\n  | where csUriStem has_any(scriptExtensions)\\n  |where scStatus == 200\\n  |where ipv4_is_private(cIP) == false and  cIP !startswith \\\"fe80\\\" and cIP !startswith \\\"::\\\" and cIP !startswith \\\"127.\\\"\\n  |where ipv4_is_private(sIP) == false   \\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), makelist(cIP), dcount(TimeGenerated) by csUriStem, sSiteName, csUserAgent;\\n  data\\n  | mvexpand list_cIP\\n  | distinct StartTime, EndTime, tostring(list_cIP), csUriStem, sSiteName, csUserAgent\\n  | summarize StartTime = min(StartTime), EndTime = max(StartTime), dcount(list_cIP), makelist(list_cIP), makelist(sSiteName) by csUriStem, csUserAgent\\n  | where dcount_list_cIP == clientThreshold \\n  | where csUserAgent startswith \\\"Mozilla\\\"\\n  | extend timestamp = StartTime, UserAgentCustomEntity = csUserAgent  \",\"size\":4,\"showAnalytics\":true,\"title\":\"T1190 WebshellsSuspiciousURI\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1= dynamic([\\\"pcapp.store\\\"]);\\r\\nunion Device*\\r\\n| where RemoteUrl has_any (c1) or InitiatingProcessFolderPath contains \\\"pcappstore\\\"\",\"size\":4,\"showAnalytics\":true,\"title\":\"TA0001 - PcAppStore - Potential malware installed\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selection_filetype=dynamic([\\\"png\\\",\\\"gif\\\",\\\"jpeg\\\",\\\"jpg\\\"]);\\r\\nlet selection_subject=dynamic([\\\"2FA\\\",\\\"Action\\\",\\\"payroll\\\",\\\"MFA\\\"]); //add other potential subjects\\r\\nlet filter_domain=dynamic([\\\"microsoft.com\\\",\\\"sharepointonline.com\\\"]); //add agency specific filter\\r\\nlet lookback = 3d;\\r\\nEmailEvents\\r\\n| where TimeGenerated > ago(lookback)\\r\\n| summarize arg_min(TimeGenerated,*) by NetworkMessageId, RecipientEmailAddress, TenantId\\r\\n| where EmailDirection == 'Inbound'\\r\\n| where DeliveryAction == 'Delivered'\\r\\n| where SenderMailFromDomain !contains \\\"wa.gov.au\\\"\\r\\n| extend username_ = tostring(split(RecipientEmailAddress, \\\"@\\\")[0])\\r\\n| extend domain_ = tostring(split(RecipientEmailAddress, \\\"@\\\")[1])\\r\\n| extend domain_name_ = tostring(split(domain_, \\\".\\\")[0])\\r\\n| where Subject contains username_ or Subject contains domain_ or Subject contains domain_name_ or Subject has_any (selection_subject)\\r\\n| where not(SenderMailFromDomain has_any (filter_domain))\\r\\n| join \\r\\n(\\r\\nEmailAttachmentInfo\\r\\n| where TimeGenerated > ago(lookback)\\r\\n| where FileType has_any (selection_filetype)\\r\\n| where FileName matches regex \\\"^[A-Za-z0-9]{7,10}\\\\\\\\.[A-Za-z0-9]+$\\\" //tweak here to change potential qr code filename convention changes\\r\\n| where FileName !startswith \\\"image\\\" and FileName !startswith \\\"ATT00\\\" //ignore lists for known attachment false positive\\r\\n) on NetworkMessageId\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1566.001 - QR Code Phishing Attachment (Quishing)\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 2 \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceFileEvents\\r\\n| where FileName matches regex @\\\"Edge\\\\\\\\.[a-z0-9]{6}\\\\\\\\.zip\\\" or FileName matches regex @\\\"Chrome\\\\\\\\.Update\\\\\\\\.[a-z0-9]{6}\\\\\\\\.zip\\\" or FileName matches regex @\\\"FireFox\\\\\\\\.Update\\\\\\\\.[a-z0-9]{6}\\\\\\\\.zip\\\" or FileName matches regex @\\\"download\\\\\\\\.[a-z0-9]{6}\\\\\\\\.zip\\\"\\r\\n| where InitiatingProcessFileName <> \\\"MsSense.exe\\\" //Exclude files detected by Defender for Endpoint\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1189 - Drive-by Compromise - FakeUpdate\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 2 \"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"TH ADS\"},\"name\":\"group - 7 - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Execution https://attack.mitre.org/tactics/TA0002/\",\"style\":\"success\"},\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selection_main = dynamic(['wmic.exe','powershell.exe','cmd.exe','ntdsutil.exe']);\\r\\nlet selection_wmic = dynamic([\\\"wmic\\\", \\\"process\\\", \\\"create\\\"]); //not used\\r\\nlet selection_command = dynamic(['ntdsutil','ntds','ac','i','ifm']);\\r\\nunion isfuzzy=true\\r\\n(DeviceProcessEvents\\r\\n| where FolderPath has_any(selection_main)\\r\\n| where ProcessCommandLine has_all (selection_command) or InitiatingProcessCommandLine has_all (selection_command)\\r\\n),\\r\\n(SecurityEvent\\r\\n| where EventID == 4688\\r\\n| where CommandLine has_all (selection_command)\\r\\n)\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1047 - WMIC Commands\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1= dynamic(['.zip','.js']);  \\r\\nfind where InitiatingProcessCommandLine has_all (c1) or  ProcessCommandLine has_all (c1) or\\r\\nCommandLine has_all (c1)  \",\"size\":4,\"showAnalytics\":true,\"title\":\"T1059.007 - GootLoader: JavaScript Execution\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic([@\\\"\\\\scilc.exe\\\", \\\"-do\\\"]);\\r\\nfind where InitiatingProcessCommandLine has_all (c1) or ProcessCommandLine has_all (c1) or CommandLine has_all (c1) \",\"size\":4,\"showAnalytics\":true,\"title\":\"T1059 - MicroSCADA SCILC Command Execution\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"T1059 - MicroSCADA SCILC Command Execution\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"TH ADS\"},\"name\":\"group - 7 - Copy - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Persistence https://attack.mitre.org/tactics/TA0003/\",\"style\":\"success\"},\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1= dynamic(['reg',' ADD', @'Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run']); \\r\\nfind where InitiatingProcessCommandLine has_all (c1) or ProcessCommandLine has_all (c1) or CommandLine has_all (c1)       \",\"size\":4,\"showAnalytics\":true,\"title\":\"T1547.001 - Potential Persistence Attempt Via Run Keys Using Reg.EXE\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let ExtensionList = pack_array('asp','aspx','aar','ascx','ashx','asmx','c','cfm','cgi','jsp','jspx','php','pl','exe','jsp','jar','py','ps1','psm1','cmd','psd1','java','wsf','vbs');\\r\\nlet IncludeTemp = false; // whether to include files that contain \\\\temp\\\\ in their path\\r\\nDeviceFileEvents\\r\\n| where ActionType in ('FileCreated', 'FileRenamed', 'FileModified')\\r\\n| where InitiatingProcessFileName in~('w3wp.exe','httpd.exe') \\r\\n| where FolderPath contains @'\\\\inetpub\\\\wwwroot\\\\'\\r\\n| where (IncludeTemp or FolderPath  !contains @'\\\\temp\\\\')\\r\\n| extend extension = tolower(tostring(split(FileName,'.')[-1]))\\r\\n| where extension in (ExtensionList)  \",\"size\":4,\"showAnalytics\":true,\"title\":\"T1505.003 - IIS webshell file writes\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selection_general = @\\\".*(/httpd|/lighttpd|/nginx|/apache2|/node|/caddy)$\\\";\\r\\nlet selection_tomcat = dynamic(['/bin/java','tomcat']);\\r\\nlet selection_websphere = dynamic(['/bin/java','websphere']);\\r\\nlet sub_processes= @\\\"/(whoami|ifconfig|ip|bin/uname|bin/cat|bin/crontab|hostname|iptables|netstat|pwd|route)$\\\";\\r\\nDeviceProcessEvents\\r\\n| where TimeGenerated > ago(30d)\\r\\n| where InitiatingProcessFolderPath matches regex selection_general or InitiatingProcessCommandLine has_all (selection_tomcat) or InitiatingProcessCommandLine has_all (selection_websphere)\\r\\n| where FolderPath matches regex sub_processes\\r\\n//| summarize count(), earliest_time=min(TimeGenerated), set_DeviceName=make_set(DeviceName) by TenantId, InitiatingProcessFolderPath,InitiatingProcessCommandLine, FolderPath, ProcessCommandLine, SHA256\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1505.003 - Linux Webshell Indicators\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"30\",\"name\":\"query - 2 \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let cs_uri_query=dynamic(['=C:/Users', '=C:/Program%20Files', '=C:/Windows', '=C%3A%5CUsers', '=C%3A%5CProgram%20Files', '=C%3A%5CWindows']);\\r\\nAzureDiagnostics \\r\\n//| where action_s == \\\"Allowed\\\" // filter to minimise noise\\r\\n| where requestUri_s has_any (cs_uri_query)\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1505.003 - Suspicious Windows Strings In URI\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2  - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selection_wwwroot = @\\\"\\\\inetpub\\\\wwwroot\\\\\\\";\\r\\nlet selection_ext1 = dynamic(['.asp','.ashx','.ph']);\\r\\nlet selection_static = dynamic([\\\"\\\\\\\\www\\\\\\\\\\\", \\\"\\\\\\\\htdocs\\\\\\\\\\\", \\\"\\\\\\\\html\\\\\\\\\\\"]);\\r\\nlet selection_ext2 = \\\".ph\\\";\\r\\nlet false_positive1 = dynamic(['\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\', '\\\\\\\\Windows\\\\\\\\Temp\\\\\\\\']); //false positives when unpacking some executables in $TEMP\\r\\nlet false_positive_system = \\\"System\\\"; //backup or restore from drivers\\r\\nlet false_positive_legitimate = dynamic([\\\"\\\\\\\\xampp\\\",\\\"\\\\\\\\QGIS\\\"]);\\r\\nDeviceFileEvents //SOC-748162\\r\\n| where ActionType == \\\"FileCreated\\\" //Modification to filter only file creation\\r\\n| where (FolderPath contains selection_wwwroot and FolderPath has_any (selection_ext1)) or (FolderPath has_any (selection_static) and FolderPath endswith selection_ext2)\\r\\n| where not(FolderPath has_any (false_positive1) or InitiatingProcessFolderPath == false_positive_system or FolderPath has_any (false_positive_legitimate))\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1505.003 - Windows Webshell Creation\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2  - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceProcessEvents\\r\\n| where InitiatingProcessFolderPath endswith '\\\\\\\\sqlservr.exe' and FolderPath matches regex @\\\".*(bash.exe|bitsadmin.exe|cmd.exe|netstat.exe|nltest.exe|ping.exe|powershell.exe|pwsh.exe|regsvr32.exe|rundll32.exe|sh.exe|systeminfo.exe|tasklist.exe|wsl.exe)$\\\"\\r\\n| where InitiatingProcessFolderPath !startswith \\\"C:\\\\\\\\Program Files\\\\\\\\Microsoft SQL Server\\\\\\\\\\\"\\r\\n| where InitiatingProcessFolderPath !endswith \\\"DATEV_DBENGINE\\\\\\\\MSSQL\\\\\\\\Binn\\\\\\\\sqlservr.exe\\\"\\r\\n| where FolderPath !contains 'C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\cmd.exe'\\r\\n| where ProcessCommandLine !startswith \\\"C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\cmd.exe\\\"\\r\\n| where ProcessCommandLine !startswith \\\"C:\\\\\\\\Windows\\\\\\\\SysWOW64\\\\\\\\cmd.exe\\\"\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1505.003 - Suspicious Child Process Of SQL Server\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"30\",\"name\":\"query - 2  - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selection_1 = dynamic(['.exe','ADMIN$']); \\r\\nlet selection_2 = dynamic(['powershell','start','%COMSPEC%']); \\r\\nDeviceRegistryEvents\\r\\n| where ActionType == \\\"RegistryValueSet\\\"\\r\\n| where RegistryKey has_any (@'HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\ControlSet001\\\\Services', @'HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\ControlSet002\\\\Services', @'HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services') \\r\\n| where RegistryValueData has_all (selection_1) or RegistryValueData has_all (selection_2)\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1543.003 - CobaltStrike: Service Installations in Registry\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2  - Copy - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceProcessEvents\\r\\n| where ProcessCommandLine has_all ('New-Service','-BinaryPathName')\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1543.003 - New Service Creation Using PowerShell\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2  - Copy - Copy - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selection=dynamic(['AmmyyAdmin','Atera','BASupportExpressSrvcUpdater','BASupportExpressStandaloneService','chromoting', 'GoToAssist','GoToMyPC','jumpcloud','LMIGuardianSvc','LogMeIn','monblanking','Parsec','RManService','RPCPerformanceService','RPCService','SplashtopRemoteService','SSUService','TightVNC','vncserver','Zoho']);\\r\\nunion \\r\\n(\\r\\nSecurityEvent\\r\\n| where EventID == 4697\\r\\n| where ServiceFileName has_any (selection)\\r\\n| extend TableName_ = \\\"SecurityEvent\\\"\\r\\n| summarize count(), set_Tables=make_set(TableName_) by FileName=ServiceFileName, TenantId\\r\\n),\\r\\n(\\r\\nunion withsource=TableName_ Device*\\r\\n| where FileName has_any (selection)\\r\\n| where FileName endswith \\\".exe\\\"\\r\\n| summarize count(), set_Tables=make_set(TableName_) by FileName, TenantId\\r\\n)\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1543.003 - Create or Modify System Process - Remote Access Tool Services Have Been Installed\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"30\",\"name\":\"T1543.003 - Create or Modify System Process - Remote Access Tool Services Have Been Installed\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selection_sc_1 = dynamic(['sc','config ','binpath=']); \\r\\nlet selection_sc_2 = dynamic(['sc','failure','command=']); \\r\\nDeviceProcessEvents\\r\\n| where ActionType == \\\"ProcessCreated\\\"\\r\\n| where InitiatingProcessParentFileName <> \\\"msiexec.exe\\\"\\r\\n| where FolderPath endswith \\\"sc.exe\\\"\\r\\n| where (ProcessCommandLine has_all (selection_sc_1) or ProcessCommandLine has_all (selection_sc_2))\\r\\n| summarize count(), earliest_Timestamp=min(TimeGenerated) by AccountDomain, AccountName, InitiatingProcessParentFileName, InitiatingProcessFolderPath, InitiatingProcessFileName, ProcessCommandLine, TenantId\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1543.003 - Potential Persistence Attempt Via Existing Service Tampering (sc.exe)\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"T1543.003 - Potential Persistence Attempt Via Existing Service Tampering (sc.exe)\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selection_reg_img1 = dynamic(['reg ','add ','FailureCommand']); \\r\\nlet selection_reg_img2 = dynamic(['reg ','add ','ImagePath']); \\r\\nlet selection_reg_ext = dynamic(['.sh', '.exe','.dll','.bin$','.bat','.cmd','.js','.msh$','.reg$','.scr','.ps','.vb','.jar','.pl']); \\r\\nDeviceProcessEvents\\r\\n| where (ProcessCommandLine has_all (selection_reg_img1) and ProcessCommandLine has_all (selection_reg_img2) and ProcessCommandLine has_any (selection_reg_ext))\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1543.003 - Potential Persistence Attempt Via Existing Service Tampering (reg.exe)\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"T1543.003 - Potential Persistence Attempt Via Existing Service Tampering (reg.exe)\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selection_cli_3 = dynamic(['gacutil','/I']);\\r\\nDeviceProcessEvents\\r\\n| where InitiatingProcessFolderPath endswith \\\"\\\\\\\\w3wp.exe\\\"\\r\\n| where ProcessCommandLine has \\\"appcmd.exe add module\\\" or\\r\\n        (ProcessCommandLine has \\\"system.enterpriseservices.internal.publish\\\" and FolderPath endswith \\\"\\\\\\\\powershell.exe\\\") or\\r\\n        (ProcessCommandLine has_all (selection_cli_3))\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1505.004 - Suspicious IIS Module Registration\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"30\",\"name\":\"T1505.004 - Suspicious IIS Module Registration\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SecurityEvent\\r\\n| where EventID == 4697 \\r\\n| where AccountType != 'Machine'\\r\\n| project ServiceName, ServiceFileName,Account, Computer,TimeGenerated\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1543.003 - Windows Service - install services on the device \",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"30\",\"name\":\"4\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"TH ADS\"},\"name\":\"group - 7 - Copy - Copy - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Defense Evasion https://attack.mitre.org/tactics/TA0005/\",\"style\":\"success\"},\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = 'powershell.exe'; \\r\\n    let c2 = dynamic(['-version 2', '-v 2']);\\r\\n    find where (InitiatingProcessFileName == c1 and InitiatingProcessCommandLine has_any (c2)) or \\r\\n    (Process == c1 and CommandLine has_any (c2)) \",\"size\":4,\"showAnalytics\":true,\"title\":\"T1562.001 - Impair Defenses: Disable or Modify Tools - PowerShell Downgrade attack\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"30\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let exclusion_defender= dynamic([@'c:\\\\programdata\\\\microsoft\\\\windows defender',@'c:\\\\program files\\\\windows defender']); //Exclude activities from Microsoft Defender itself\\r\\nDeviceRegistryEvents\\r\\n| where ActionType == \\\"RegistryKeyDeleted\\\"\\r\\n| where not(InitiatingProcessFolderPath has_any(exclusion_defender) and InitiatingProcessFileName == \\\"msmpeng.exe\\\") and (PreviousRegistryKey endswith '{2781761E-28E0-4109-99FE-B9D127C57AFE}' or PreviousRegistryKey endswith '{A7C452EF-8E9F-42EB-9F2B-245613CA0DC9}')\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1562.001 - Impair Defenses: Removal Of AMSI Provider Registry Keys\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"T1562.001 - Impair Defenses: Removal Of AMSI Provider Registry Keys\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic(['Assembly.GetType','SetValue']);  \\r\\nfind where InitiatingProcessCommandLine has_all (c1) or CommandLine has_all (c1)  \",\"size\":4,\"showAnalytics\":true,\"title\":\"T1562.001 - Impair Defenses: Disable or Modify Tools - AMSI Bypass attack\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic(['Set-MpPreference', 'Add-MpPreference']);\\r\\n    let c2 = dynamic([' -ExclusionPath ', ' -ExclusionExtension ', ' -ExclusionProcess ', ' -ExclusionIpAddress ', 'DisableRealtimeMonitoring ', 'DisableIOAVProtection ', 'DisableBehaviorMonitoring ', 'DisableBlockAtFirstSeen ']);  \\r\\n    find where (InitiatingProcessCommandLine has_any (c1) or CommandLine has_any (c1))  and \\r\\n    (InitiatingProcessCommandLine has_any (c2) or CommandLine has_any (c2))    \",\"size\":4,\"showAnalytics\":true,\"title\":\"T1562.001 - Impair Defenses: Disable or Modify Tools - Defender Disabling or Exclusions\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"30\",\"name\":\"query - 2 \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selection_main = dynamic([@'\\\\SOFTWARE\\\\Microsoft\\\\Windows Defender\\\\', @'\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender Security Center\\\\',@'\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender\\\\']); \\r\\nlet selection_dword_1 = dynamic(['DisableAntiSpyware','DisableAntiVirus', 'DisableBehaviorMonitoring','DisableIntrusionPreventionSystem', 'DisableIOAVProtection', 'DisableOnAccessProtection','DisableRealtimeMonitoring','DisableScanOnRealtimeEnable','DisableScriptScanning','DisableEnhancedNotifications',  'DisableBlockAtFirstSeen']); \\r\\nlet selection_dword_0 = dynamic(['DisallowExploitProtectionOverride', 'TamperProtection', 'MpEnablePus', 'PUAProtection', 'ForceUpdateFromMU', 'SpynetReporting', 'SubmitSamplesConsent','EnableControlledFolderAccess']); \\r\\nlet exclusion_defender= dynamic([@'c:\\\\programdata\\\\microsoft\\\\windows defender',@'c:\\\\program files\\\\windows defender']); //Exclude activities from Microsoft Defender itself\\r\\nDeviceRegistryEvents\\r\\n| where ActionType == \\\"RegistryValueSet\\\"\\r\\n| where RegistryKey has_any (selection_main)\\r\\n| where (RegistryKey matches regex @\\\"(?i)(\\\\\\\\Real-Time Protection|\\\\\\\\Reporting|\\\\\\\\SpyNet)$\\\" and RegistryValueName has_any (selection_dword_1) and RegistryValueType =~ \\\"Dword\\\" and RegistryValueData == 1 )//DWORD (0x00000001) \\r\\nor \\r\\n(RegistryKey matches regex @\\\"(?i)(\\\\\\\\App and Browser protection|\\\\\\\\Features|\\\\\\\\MpEngine|\\\\\\\\Signature Update|\\\\\\\\SpyNet|\\\\\\\\Windows Defender Exploit Guard\\\\\\\\Controlled Folder Access)$\\\" and RegistryValueName has_any(selection_dword_0) and RegistryValueType =~ \\\"Dword\\\" and RegistryValueData == 0 )//DWORD (0x00000000) \\r\\n| where not(InitiatingProcessFolderPath has_any (exclusion_defender) and InitiatingProcessFileName == \\\"msmpeng.exe\\\") //Exclude activities from Microsoft Defender itself\\r\\n//| summarize count(), start_TimeStamp =min(TimeGenerated),last_TimeStamp=max(TimeGenerated), set_DeviceName=make_set(DeviceName), DeviceNum=dcount(DeviceName), set_RegistryValueName=make_set(RegistryValueName) by ActionType, InitiatingProcessAccountDomain, InitiatingProcessAccountName, InitiatingProcessFolderPath, InitiatingProcessParentFileName, InitiatingProcessFileName, InitiatingProcessCommandLine, RegistryKey, TenantId\\r\\n//| project start_TimeStamp, last_TimeStamp, ActionType, InitiatingProcessParentFileName, InitiatingProcessFolderPath, InitiatingProcessFileName, InitiatingProcessCommandLine, RegistryKey, set_RegistryValueName, DeviceNum, set_DeviceName, count_, TenantId\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1562.001 ImpairDefenses - Disable Defender Functionalities Via Registry Keys\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2 \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceRegistryEvents\\r\\n| where RegistryKey endswith @\\\"\\\\Control\\\\MiniNt\\\"   \",\"size\":4,\"showAnalytics\":true,\"title\":\"T1562.002 - Impair Defenses: Disable Windows Logging\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2  \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic(['1102','104']);\\r\\nunion isfuzzy=true \\r\\n(SecurityEvent\\r\\n| where EventSourceName =~ \\\"Microsoft-Windows-Eventlog\\\" and EventID in (c1)),\\r\\n(WindowsEvent\\r\\n| where Provider =~ \\\"Microsoft-Windows-Eventlog\\\" and EventID in (c1)),\\r\\n(Event\\r\\n| where EventLog =~ \\\"Microsoft-Windows-Eventlog\\\" and EventID in (c1))    \",\"size\":4,\"showAnalytics\":true,\"title\":\"T1562.002 - Impair Defenses: Disable Windows Logging on EventID\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"30\",\"name\":\"query - 2   \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selection_wevtutil = dynamic([\\\"/e:false\\\", \\\"cl\\\", \\\"clear-log\\\"]);\\r\\nDeviceProcessEvents\\r\\n| where ProcessCommandLine has \\\"WEVTUTIL\\\" and ProcessCommandLine has_any(selection_wevtutil)\\r\\n//| summarize count(), first_seen = min(TimeGenerated), last_seen = max(TimeGenerated) by TenantId, DeviceName, AccountName, InitiatingProcessFolderPath, FolderPath, ProcessCommandLine\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1562.002 Impair Defenses: Disable Windows Logging using wevtutil\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2    \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceEvents\\r\\n| where ActionType == \\\"BrowserLaunchedToOpenUrl\\\" and isnotempty(RemoteUrl)  \\r\\n| where base64_decode_tostring(extract(@\\\".+http.*\\\\%2F([A-Za-z0-9+\\\\/]{6,}=?)\\\", 1, RemoteUrl)) has_any (\\\".gov\\\", \\\".com\\\")    \",\"size\":4,\"showAnalytics\":true,\"title\":\"T1027.006 - HTML Smuggling\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2    \"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"TH ADS\"},\"name\":\"group - 7 - Copy - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Credential Access https://attack.mitre.org/tactics/TA0006/\",\"style\":\"success\"},\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic([\\\"procdump\\\", \\\"lsass\\\"]); \\r\\nlet c2 = dynamic([\\\"rundll32\\\", \\\"comsvcs\\\", \\\"MiniDump\\\"]);\\r\\nlet c3 = dynamic(['MiniDump',' full']); \\r\\nlet c4 = 'sekurlsa'; \\r\\nfind where InitiatingProcessCommandLine has_all (c1) or ProcessCommandLine has_all (c1) or CommandLine has_all (c1) or\\r\\nInitiatingProcessCommandLine has_all (c2) or ProcessCommandLine has_all (c2) or CommandLine has_all (c2) or\\r\\nInitiatingProcessCommandLine has_all (c3) or ProcessCommandLine has_all (c3) or CommandLine has_all (c3) or \\r\\nInitiatingProcessCommandLine has c4 or ProcessCommandLine has c4 or CommandLine has c4  \\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1003.001 - OS Credential Dumping LSASS Memory\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic([\\\"ntds.dit\\\"]); \\r\\nfind where InitiatingProcessCommandLine has_all (c1) or ProcessCommandLine has_all (c1) or CommandLine has_all (c1) \\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1003.003 - OS Credential Dumping Exfiltrate ntds.dit\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic([\\\"Invoke-NinjaCopy\\\",\\\"Secretsdump.py\\\",\\\"DSInternals\\\"]);\\r\\nfind where InitiatingProcessCommandLine has_any (c1) or ProcessCommandLine has_any (c1) or CommandLine has_any (c1) \\r\\n\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1003.003 - OS Credential Dumping: NTDS using Tools\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"30\",\"name\":\"query - 2 \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selection_properties = dynamic(['Replicating Directory Changes All','1131f6ad-9c07-11d1-f79f-00c04fc2dcd2','1131f6aa-9c07-11d1-f79f-00c04fc2dcd2','9923a32a-3607-11d2-b9be-0000f87a36b2','89e95b76-444d-4c62-991a-0facbeda640c']);\\r\\nlet selection_AccessMask = '0x100';\\r\\nlet filter1 = 'Window Manager';\\r\\nlet filter2 = @\\\"^(NT AUT|MSOL_)\\\";\\r\\nlet filter3 = \\\"$\\\";\\r\\nSecurityEvent\\r\\n| where EventID == 4662\\r\\n| where Properties has_any (selection_properties) and AccessMask == selection_AccessMask\\r\\n| where not(SubjectDomainName == filter1 or SubjectUserName matches regex filter2 or SubjectUserName endswith filter3)\\r\\n| summarize first_TimeStamp=min(TimeGenerated), last_TimeStamp=max(TimeGenerated), count(), set_SubjectDomainNAme = make_set(SubjectDomainName), set_SubjectUserName = make_set(SubjectUserName), set_Properties=make_set(Properties) by Account, Computer, TenantId\\r\\n\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1003.006 - OS Credential Dumping: DCSync\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2  \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic([\\\"dir\\\", \\\".ssh\\\",\\\"known_hosts\\\"]); \\r\\nlet c2 = dynamic([\\\"dir\\\", @\\\"firefox\\\\profiles\\\"]); \\r\\nlet c3 = dynamic([\\\"reg\\\", \\\" query\\\", \\\"OpenSSH\\\"]); \\r\\nlet c4 = dynamic([\\\"reg\\\", \\\" query\\\", \\\"realvnc\\\"]); \\r\\nlet c5 = dynamic([\\\"reg\\\", \\\" query\\\", @\\\"putty\\\\session\\\"]); \\r\\nlet c6 = dynamic([\\\"reg\\\", \\\" save\\\", @\\\" hklm\\\\sam\\\", \\\" ss.dat\\\"]); \\r\\nlet c7 = dynamic([\\\"reg\\\", \\\" save\\\", @\\\" hklm\\\\system\\\", \\\" sy.dat\\\"]); \\r\\nfind where (InitiatingProcessCommandLine has_all (c1) or ProcessCommandLine has_all (c1) or CommandLine has_all (c1)) or\\r\\n(InitiatingProcessCommandLine has_all (c2) or ProcessCommandLine has_all (c2) or CommandLine has_all (c2)) or\\r\\n(InitiatingProcessCommandLine has_all (c3) or ProcessCommandLine has_all (c3) or CommandLine has_all (c3)) or \\r\\n(InitiatingProcessCommandLine has_all (c4) or ProcessCommandLine has_all (c4) or CommandLine has_all (c4)) or\\r\\n(InitiatingProcessCommandLine has_all (c5) or ProcessCommandLine has_all (c5) or CommandLine has_all (c5)) or\\r\\n(InitiatingProcessCommandLine has_all (c6) or ProcessCommandLine has_all (c6) or CommandLine has_all (c6)) or\\r\\n(InitiatingProcessCommandLine has_all (c7) or ProcessCommandLine has_all (c7) or CommandLine has_all (c7))  \\r\\n\\r\\n\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1555 - Credentials from Password Stores\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2    \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = @'reg.*query\\\\s.*password';\\r\\nfind where InitiatingProcessCommandLine matches regex c1 or ProcessCommandLine matches regex c1 or CommandLine matches regex c1 \\r\\n\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1552.002 - REGISTRY Password Dumping\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"30\",\"name\":\"query - 2   \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SecurityEvent \\r\\n    | where EventID == 4769 \\r\\n    | parse EventData with * 'ServiceName\\\">' ServiceName \\\"<\\\" * \\r\\n    | where ServiceName contains \\\"pick\\\"\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1558.003 - Steal or Forge Kerberos Tickets: Kerberoasting\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2    \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SigninLogs  \\r\\n| where parse_json(RiskEventTypes_V2) has \\\"unfamiliarFeatures\\\" and RiskLevelDuringSignIn == \\\"high\\\"\\r\\n| where ResultType == \\\"0\\\"\\r\\n| where AppDisplayName == \\\"OfficeHome\\\"\\r\\n| project-reorder TimeGenerated,IPAddress, Location, UserPrincipalName, AppDisplayName, Category, ResultType, ResultDescription, RiskLevelDuringSignIn, RiskEventTypes_V2, RiskDetail, AutonomousSystemNumber,  AuthenticationDetails\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1557 - AiTM - Phishing logging\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"30\",\"name\":\"query - 2     \"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"TH ADS\"},\"name\":\"group - 7\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Discovery https://attack.mitre.org/tactics/TA0007/\",\"style\":\"success\"},\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic([\\\"curl\\\", \\\"www.ip-api.com\\\"]);\\r\\nlet c2 = dynamic([\\\"ldifde.exe\\\", \\\"subtree\\\"]);\\r\\nfind where InitiatingProcessCommandLine has_all (c1) or ProcessCommandLine has_all (c1) or CommandLine has_all (c1) or\\r\\nInitiatingProcessCommandLine has_all (c2) or ProcessCommandLine has_all (c2) or CommandLine has_all (c2)  \\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1016 - Enumerate Network Topology\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic([\\\"Get-EventLog\\\", \\\"4624\\\"]);\\r\\nfind where InitiatingProcessCommandLine has_all (c1) or ProcessCommandLine has_all (c1) or CommandLine has_all (c1)   \\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1033 - Identify successful logons to the host\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 1 \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic([\\\"cmd\\\", \\\"wmic\\\", \\\"caption\\\", \\\"filesystem\\\"]); \\r\\nfind where InitiatingProcessCommandLine has_all (c1) or ProcessCommandLine has_all (c1) or CommandLine has_all (c1) \\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1082 - System Information Discovery\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"30\",\"name\":\"query - 1  \"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"TH ADS\"},\"name\":\"group - 8\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Lateral Movement https://attack.mitre.org/tactics/TA0008/\",\"style\":\"success\"},\"name\":\"text - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let webserver_ip = ()\\r\\n{DeviceNetworkEvents\\r\\n| where InitiatingProcessFileName has_any ('w3wp','nginx','apache') and LocalIPType == \\\"Private\\\"\\r\\n| distinct LocalIP};\\r\\nDeviceNetworkEvents\\r\\n| where (LocalIP has_any (webserver_ip()) or DeviceName contains \\\"Web\\\") and RemotePort in (3389,22)\\r\\n| distinct RemoteIP, DeviceName,RemotePort, InitiatingProcessCommandLine\\r\\n\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1021 - Lateral Movement - Remote Services\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceFileEvents\\r\\n| where RequestProtocol == \\\"Smb\\\" \\r\\n| where FileName endswith \\\".exe\\\" // Filter for executables, remove for a wider scope \\r\\n| summarize make_set(FileName), make_set(DeviceName), make_set(SHA1), make_set(ShareName), count() by RequestSourceIP, RequestAccountName\\r\\n| where count_ < 20 // Filter on lower count to reduce noise\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1021.002 - SMB/Windows Admin Shares\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 1 - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"TH ADS\"},\"name\":\"group - 9\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Command and Control https://attack.mitre.org/tactics/TA0011/\",\"style\":\"success\"},\"name\":\"text - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic([\\\"portproxy\\\", \\\"netsh\\\", \\\"add\\\"]);\\r\\nfind where InitiatingProcessCommandLine has_all (c1) or ProcessCommandLine has_all (c1) or CommandLine has_all (c1)\\r\\n\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1090 - Proxy\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 1\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"TH ADS\"},\"name\":\"group - 10\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Impact https://attack.mitre.org/tactics/TA0040/\",\"style\":\"success\"},\"name\":\"text - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceEvents\\r\\n| where ActionType in ('AsrRansomwareBlocked', 'AsrRansomwareAudited')\\r\\n| where FileName !in ('vssadmin.exe')\\r\\n| summarize arg_max(TimeGenerated, *), TotalEvents = count(), TriggeredFiles = make_set(FileName), FileHashes = make_set(SHA1), IntiatingProcesses = make_set(InitiatingProcessCommandLine) by DeviceName, AccountName\\r\\n| project TimeGenerated, DeviceName, AccountDomain, AccountName, TotalEvents, TriggeredFiles, FileHashes, IntiatingProcesses \\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"T1486 - ASR Ransomware - Detects when the ASR rule AsrRansomwareBlocked or AsrRansomwareAudited is triggered\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 1\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"TH ADS\"},\"name\":\"group - 10 - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Malware / Tools\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Impacket https://attack.mitre.org/software/S0357/\",\"style\":\"success\"},\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic([\\\"cmd.exe\\\", \\\"2>&1\\\", \\\"ADMIN$\\\"]);\\r\\nfind where InitiatingProcessCommandLine has_all (c1) or ProcessCommandLine has_all (c1) or CommandLine has_all (c1) \\r\\n\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"S0357 - Potential Impacket Execution \\\"dir\\\" command\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"(union isfuzzy=true\\r\\n  (SecurityEvent\\r\\n  | where EventID == '5145'\\r\\n  | where RelativeTargetName has 'SYSTEM32' and RelativeTargetName endswith @\\\".tmp\\\"\\r\\n  | where ShareName has \\\"\\\\\\\\\\\\\\\\*\\\\\\\\ADMIN$\\\"\\r\\n  ),\\r\\n  (WindowsEvent\\r\\n  | where EventID == '5145' \\r\\n  | extend RelativeTargetName= tostring(EventData.RelativeTargetName)\\r\\n  | extend ShareName= tostring(EventData.ShareName)\\r\\n  | where RelativeTargetName has 'SYSTEM32' and RelativeTargetName endswith @\\\".tmp\\\"\\r\\n  | where ShareName has \\\"\\\\\\\\\\\\\\\\*\\\\\\\\ADMIN$\\\"\\r\\n  | extend Account =  strcat(tostring(EventData.SubjectDomainName),\\\"\\\\\\\\\\\", tostring(EventData.SubjectUserName))\\r\\n  )\\r\\n  )\\r\\n  | extend timestamp = TimeGenerated \\r\\n  | extend NTDomain = split(Account, '\\\\\\\\', 0)[0], UserName = split(Account, '\\\\\\\\', 1)[0]\\r\\n  | extend HostName = split(Computer, '.', 0)[0], DnsDomain = strcat_array(array_slice(split(Computer, '.'), 1, -1), '.')\\r\\n  | extend Account_0_Name = UserName\\r\\n  | extend Account_0_NTDomain = NTDomain\\r\\n  | extend Host_0_HostName = HostName\\r\\n  | extend Host_0_DnsDomain = DnsDomain\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"S0357 - Impacket Secretdump with SMB2\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 2\"},{\"type\":1,\"content\":{\"json\":\"### Cobalt Strike https://attack.mitre.org/software/S0154/\",\"style\":\"success\"},\"name\":\"text - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let badNames = dynamic([\\\"aaa.stage\\\",\\\"baa.stage\\\",\\\"caa.stage\\\", \\\"post.1\\\"]);\\r\\n(union isfuzzy=true\\r\\n(DnsEvents \\r\\n| where Name has_any (badNames)\\r\\n| extend Domain = Name, SourceIp = ClientIP, RemoteIP = todynamic(IPAddresses)\\r\\n| mvexpand RemoteIP\\r\\n| extend RemoteIP = tostring(RemoteIP)),\\r\\n(VMConnection\\r\\n| where isnotempty(RemoteDnsCanonicalNames) \\r\\n| parse RemoteDnsCanonicalNames with * '[\\\"' DNSName '\\\"]' *\\r\\n| where DNSName has_any (badNames)\\r\\n| extend Domain = DNSName, RemoteIP = RemoteIp\\r\\n))\\r\\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by Domain, SourceIp, RemoteIP, Computer\\r\\n| extend timestamp = StartTimeUtc, HostCustomEntity = Computer, IPCustomEntity = RemoteIP\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"S0154 - Cobalt Strike: DNS Beaconing\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 2 \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selection_MSSE = dynamic([@'\\\\MSSE-', '-server']);\\r\\nlet selection_Pipename = dynamic(['\\\\\\\\postex_', '\\\\\\\\status_', '\\\\\\\\msagent_', '\\\\\\\\mojo_', '\\\\\\\\interprocess_', '\\\\\\\\samr_', '\\\\\\\\netlogon_', '\\\\\\\\srvsvc_', '\\\\\\\\lsarpc_', '\\\\\\\\wkssvc_']); // Also include the pipe \\\"\\\\postex_ssh_\\\"\\r\\nDeviceEvents\\r\\n| where ActionType == \\\"NamedPipeEvent\\\"\\r\\n| extend FileOperation_ = tostring(AdditionalFields.FileOperation)\\r\\n| extend PipeName_ = tostring(AdditionalFields.PipeName)\\r\\n| where FileOperation_ == \\\"File created\\\"\\r\\n| where PipeName_ has_all (selection_MSSE) or PipeName_ has_any (selection_Pipename)\\r\\n| where not(InitiatingProcessFolderPath contains \\\"kdsstm.exe\\\" and PipeName_ contains \\\"kyoceradocumentsolutions\\\") // Kyocera drivers\\r\\n//| summarize count(), earliest_Timestamp=min(TimeGenerated) by ActionType, DeviceName, InitiatingProcessParentFileName, InitiatingProcessAccountDomain, InitiatingProcessAccountName, InitiatingProcessFolderPath, InitiatingProcessCommandLine, FileOperation_, PipeName_, TenantId\",\"size\":4,\"showAnalytics\":true,\"title\":\"S0154 - Cobalt Strike: NamedPipe\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 2  \"},{\"type\":1,\"content\":{\"json\":\"### QakBot https://attack.mitre.org/software/S0650/\",\"style\":\"success\"},\"name\":\"text - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic(['net view', 'cmd /c set', 'nslookup-querytype=ALL -timeout=12', '_ldap._tcp.dc._msdcs.WORKGROUP', 'net share', 'net1 share', 'route print', 'net localgroup', 'whoami /all']);\\r\\nfind where InitiatingProcessCommandLine in (c1) or ProcessCommandLine in (c1) or CommandLine in (c1)  \\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"S0650 - Qakbot: Post compromise commands\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2   \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic([@'/c ping.exe -n 6 127.0.0.1 & type']);\\r\\nlet c2 = dynamic(['regsvr32.exe','.tmp',@'C:\\\\ProgramData']);\\r\\nfind where InitiatingProcessCommandLine has_all (c1) or ProcessCommandLine has_all (c1) or CommandLine has_all (c1) or\\r\\nInitiatingProcessCommandLine has_all (c2) or ProcessCommandLine has_all (c2) or CommandLine has_all (c2) \\r\\n\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"S0650 - Qakbot: Process executions\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"35\",\"name\":\"query - 2    \"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selection_1 = dynamic([@'SOFTWARE\\\\Microsoft\\\\Windows Defender\\\\Exclusions\\\\Paths', @'SOFTWARE\\\\Microsoft\\\\Microsoft Antimalware\\\\Exclusions\\\\Paths']); \\r\\nlet selection_2 = dynamic(['ADD ', @'/t ','REG_DWORD ',@'/v ',@'/d ', '0']); \\r\\nDeviceProcessEvents\\r\\n| where ActionType == \\\"ProcessCreated\\\"\\r\\n| where FolderPath endswith @'\\\\\\\\reg.exe'\\r\\n| where ProcessCommandLine has_any (selection_1) and ProcessCommandLine has_all (selection_2)\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"S0650 - Qakbot: Defender Exclusions\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"30\",\"name\":\"query - 2     \"},{\"type\":1,\"content\":{\"json\":\"### Bloodhound/Sharphound https://attack.mitre.org/software/S0521/\",\"style\":\"success\"},\"name\":\"text - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"    let c1 = dynamic([' -CollectionMethod All ', ' --CollectionMethods Session ', ' --Loop --Loopduration ', ' --PortScanTimeout ', '.exe -c All -d', 'Invoke-Bloodhound', 'Get-BloodHoundData']);\\r\\n    let c2 = dynamic([' -JsonFolder ', ' -ZipFileName ']);\\r\\n    let c3 = dynamic([' DCOnly ', ' --NoSaveCache ']);\\r\\n    find where (InitiatingProcessCommandLine has_any (c1) or ProcessCommandLine has_any (c1) or CommandLine has_any (c1)) or \\r\\n    InitiatingProcessCommandLine has_all (c2) or ProcessCommandLine has_all (c2) or CommandLine has_all (c2) or \\r\\n    InitiatingProcessCommandLine has_all (c3) or ProcessCommandLine has_any (c3) or CommandLine has_all (c3)   \\r\\n\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"S0521 - Bloodhound/Sharphound Execution Commandlets\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 2      \"},{\"type\":1,\"content\":{\"json\":\"### AdFind https://attack.mitre.org/software/S0552/\",\"style\":\"success\"},\"name\":\"text - 12\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let c1 = dynamic(['domainlist', 'trustdmp', 'dcmodes', 'adinfo', ' dclist ', 'computer_pwdnotreqd', 'objectcategory=', '-subnets -f', 'name=\\\"Domain Admins\\\"', '-sc u:', 'domainncs', 'dompol', ' oudmp ', 'subnetdmp', 'gpodmp', 'fspdmp', 'users_noexpire', 'computers_active', 'computers_pwdnotreqd']);\\r\\nfind where \\r\\nFileName =~ \\\"AdFind.exe\\\" or ProcessVersionInfoOriginalFileName =~ \\\"AdFind.exe\\\" or \\r\\nInitiatingProcessFileName =~ \\\"AdFind.exe\\\" or InitiatingProcessVersionInfoOriginalFileName =~ \\\"AdFind.exe\\\" or Process =~ \\\"AdFind.exe\\\" or\\r\\nProcessCommandLine has_any (c1)    \\r\\n\\r\\n\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"S0552 - AdFind Execution\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"rowLimit\":10000}},\"customWidth\":\"50\",\"name\":\"query - 2       \"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"TH ADS\"},\"name\":\"group - 11\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Open Source TI hunts\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Threat Hunts based on Open-Source-Threat-Intel-Feeds\\n\\nref. </br>\\n[Bert-Jan](https://github.com/Bert-JanP/Open-Source-Threat-Intel-Feeds) </br>\\n[montysecurity](https://github.com/montysecurity)<br/>\\n[tweetfeed.live](https://tweetfeed.live/)<br/>\\n[drb-ra](https://github.com/drb-ra/C2IntelFeeds)<br/>\\n\"},\"name\":\"text - 0\"},{\"type\":1,\"content\":{\"json\":\"# IP IOCs \",\"style\":\"success\"},\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"// TI - montysecurity\\nlet BruteRatel = externaldata(IP:string, Tag:string, TIFeed:string)[@\\\"https://raw.githubusercontent.com/montysecurity/C2-Tracker/main/data/Brute%20Ratel%20C4%20IPs.txt\\\"] | extend Tag='BruteRatel', TIFeed='montysecurity';\\nlet AresRat = externaldata(IP:string, Tag:string, TIFeed:string)[@\\\"https://raw.githubusercontent.com/montysecurity/C2-Tracker/main/data/Ares%20RAT%20C2%20IPs.txt\\\"] | extend Tag='AresRat', TIFeed='montysecurity';\\nlet CalderaC2 = externaldata(IP:string, Tag:string, TIFeed:string)[@\\\"https://raw.githubusercontent.com/montysecurity/C2-Tracker/main/data/Caldera%20C2%20IPs.txt\\\"] | extend Tag='CalderaC2', TIFeed='montysecurity';\\nlet CobaltStrike = externaldata(IP:string, Tag:string, TIFeed:string)[@\\\"https://raw.githubusercontent.com/montysecurity/C2-Tracker/main/data/Cobalt%20Strike%20C2%20IPs.txt\\\"] | extend Tag='CobaltStrike', TIFeed='montysecurity';\\nlet Covenant = externaldata(IP:string, Tag:string, TIFeed:string)[@\\\"https://raw.githubusercontent.com/montysecurity/C2-Tracker/main/data/Covenant%20C2%20IPs.txt\\\"] | extend Tag='Covenant', TIFeed='montysecurity';\\nlet MetasploitFrameworkC2 = externaldata(IP:string, Tag:string, TIFeed:string)[@\\\"https://github.com/montysecurity/C2-Tracker/raw/main/data/Metasploit%20Framework%20C2%20IPs.txt\\\"] | extend Tag='MetasploitFrameworkC2', TIFeed='montysecurity';\\nlet RemcosProRAT = externaldata(IP:string, Tag:string, TIFeed:string)[@\\\"https://github.com/montysecurity/C2-Tracker/raw/main/data/Remcos%20Pro%20RAT%20Trojan%20IPs.txt\\\"] | extend Tag='RemcosProRAT', TIFeed='montysecurity';\\nlet SliverC2 = externaldata(IP:string, Tag:string, TIFeed:string)[@\\\"https://github.com/montysecurity/C2-Tracker/raw/main/data/Remcos%20Pro%20RAT%20Trojan%20IPs.txt\\\"] | extend Tag='SliverC2', TIFeed='montysecurity';\\nlet montysecurity_all = externaldata(IP:string, Tag:string, TIFeed:string)[@\\\"https://github.com/montysecurity/C2-Tracker/raw/main/data/all.txt\\\"] | extend Tag='montysecurity_all', TIFeed='montysecurity';\\n// tweetfeed.live\\nlet tweetfeed_live = externaldata( Date_:datetime, reporter:string, type:string, IP:string, tag:string , twiter:string, Tag:string, TIFeed:string)[@\\\"https://raw.githubusercontent.com/0xDanielLopez/TweetFeed/master/month.csv\\\"] | where type=='ip' | extend Tag=strcat(tag,\\\" - \\\", twiter), TIFeed='tweetfeed.live';\\n// proofpoint\\nlet proofpoint = externaldata(IP:string, Tag:string, TIFeed:string)[@\\\"https://rules.emergingthreats.net/blockrules/compromised-ips.txt\\\"] | extend Tag='compromised-ips', TIFeed='proofpoint';\\n// CINS // 15000\\nlet cins = externaldata(IP:string, Tag:string, TIFeed:string)[@\\\"https://cinsscore.com/list/ci-badguys.txt\\\"] | extend Tag='CI-badguys', TIFeed='CINS';\\n// drb-ra C2IntelFeeds\\nlet ['drb-ra'] = externaldata(IP:string, Tag:string, TIFeed:string)[@\\\"https://github.com/drb-ra/C2IntelFeeds/raw/master/feeds/IPC2s-30day.csv\\\"] | extend Tag=strcat(Tag, ' - C2IntelFeeds'), TIFeed='drb-ra';\\nlet whitelist= dynamic(['']); // Add IPs to whitelist\\nlet IPList = union BruteRatel,AresRat, CalderaC2,CobaltStrike,Covenant, MetasploitFrameworkC2, RemcosProRAT, SliverC2, montysecurity_all, tweetfeed_live, proofpoint,cins,['drb-ra'] | where IP !in (whitelist) | summarize TIName=make_set(Tag) by IP, TIFeed;\\nDeviceNetworkEvents\\n| where RemoteIP in (IPList)\\n//| where InitiatingProcessFileName !in ('svchost.exe','cvd.exe','cvfwd.exe','dns.exe','firefox.exe','msedge.exe','chrome.exe') //filter on process\\n//| where ActionType !in ('InboundConnectionAccepted') // filter on action type\\n| join IPList on $left.RemoteIP == $right.IP\\n| extend GeoIPInfo = geo_info_from_ip_address(RemoteIP)\\n| extend country = tostring(parse_json(GeoIPInfo).country), state = tostring(parse_json(GeoIPInfo).state), city = tostring(parse_json(GeoIPInfo).city), latitude = tostring(parse_json(GeoIPInfo).latitude), longitude = tostring(parse_json(GeoIPInfo).longitude)\\n| project TimeGenerated, DeviceName, ActionType, RemoteIP, RemoteUrl, TIFeed, TIName, country, InitiatingProcessCommandLine, InitiatingProcessFileName, InitiatingProcessSHA1, InitiatingProcessFolderPath, InitiatingProcessParentFileName\\n\\n\",\"size\":2,\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"TI\"},\"name\":\"query - 44\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"TI\"},\"name\":\"TI1\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Initial Investigation - Pivoting on compromised assets \\n\",\"style\":\"info\"},\"name\":\"text - 1\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"12605331-9507-4adf-999e-6cf39a0eda8c\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"UserAccount\",\"type\":1,\"description\":\"Add user account(s) in array format e.g. \\\"user@domain.au\\\",\\\"user3\\\"\",\"typeSettings\":{\"multiLineText\":true,\"editorLanguage\":\"text\",\"multiLineHeight\":2},\"timeContext\":{\"durationMs\":86400000},\"value\":\"\\\"user@domain.au\\\",\\\"user3\\\"\"},{\"id\":\"3c68e0ad-30ce-4fb3-9102-d9277f3a7b72\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IP_IOC\",\"label\":\"IP Addresses\",\"type\":1,\"description\":\"Add IP addresses in array format e.g. \\\"1.1.1.1\\\",\\\"8.8.8.8\\\"\",\"typeSettings\":{\"multiLineText\":true,\"editorLanguage\":\"text\",\"multiLineHeight\":2},\"timeContext\":{\"durationMs\":86400000},\"value\":\"\\\"1.1.1.1\\\",\\\"8.8.8.8\\\"\"},{\"id\":\"3c9a6385-4ff8-4c03-86ae-95b300deed1e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Host_IOC\",\"type\":1,\"description\":\"Add host names in array format e.g. \\\"host1\\\",\\\"host2\\\"\",\"typeSettings\":{\"multiLineText\":true,\"editorLanguage\":\"text\",\"multiLineHeight\":2},\"timeContext\":{\"durationMs\":86400000},\"value\":\"\\\"host1\\\",\\\"host2\\\"\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 2\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Security alerts in past 30 days\",\"style\":\"success\"},\"name\":\"text - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SecurityAlert\\n| where TimeGenerated > ago(30d)\\n| summarize arg_max(TimeGenerated, *) by SystemAlertId\\n| where Entities has_any ({Host_IOC}) or CompromisedEntity has_any ({Host_IOC})\\nor Entities has_any ({UserAccount}) or CompromisedEntity has_any ({UserAccount}) \\nor Entities has_any ({IP_IOC}) or CompromisedEntity has_any ({IP_IOC}) \\n| project StartTime, AlertName, AlertSeverity, CompromisedEntity, Entities, AlertLink | order by StartTime asc \",\"size\":0,\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"AlertLink\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\",\"linkLabel\":\"Go to Alert\"}}]},\"sortBy\":[]},\"name\":\"query - 0\"}]},\"name\":\"Security Alerts\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Host activities\",\"style\":\"success\"},\"name\":\"text - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceProcessEvents\\n| where DeviceName has_any ({Host_IOC}) \\n| where AccountName != \\\"system\\\" // If you suspect that the system user is compromised, remove this filter.\\n| where InitiatingProcessFileName == \\\"powershell.exe\\\"\\n| sort by TimeGenerated\\n| top 100 by TimeGenerated\\n| project TimeGenerated, DeviceName, ActionType, FileName, ProcessCommandLine, AccountDomain, AccountName, InitiatingProcessCommandLine\\n\",\"size\":1,\"title\":\"DeviceProcessEvents - Powershell executions\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"customWidth\":\"33\",\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceProcessEvents\\n| where DeviceName has_any ({Host_IOC}) \\n| where FileName in (\\\"net.exe\\\", \\\"net1.exe\\\")\\n| extend NetActionType = case(ProcessCommandLine has \\\"accounts\\\", \\\"ACCOUNTS\\\",\\n    ProcessCommandLine has \\\"group\\\", \\\"GROUP\\\",\\n    ProcessCommandLine has \\\"user\\\", \\\"USER\\\",\\n    ProcessCommandLine has \\\"localgroup\\\", \\\"LOCALGROUP\\\",\\n    \\\"Other\\\")\\n| where NetActionType != \\\"Other\\\"\\n| project-reorder TimeGenerated, ProcessCommandLine\\n| sort by TimeGenerated\",\"size\":1,\"title\":\"DeviceProcessEvents - net.exe activities\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"customWidth\":\"33\",\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceNetworkEvents\\n| where DeviceName has_any ({Host_IOC}) \\n| where RemotePort == 445\\n| where ActionType == \\\"ConnectionSuccess\\\"\",\"size\":1,\"title\":\"DeviceNetworkEvents - successful SMB connections\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"customWidth\":\"33\",\"name\":\"query - 0 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceFileEvents\\n| where RequestProtocol == \\\"Smb\\\" //and FileName endswith \\\".exe\\\"\\n| where DeviceName has_any ({Host_IOC}) or RequestAccountName has_any ({UserAccount})\\n| summarize FileName_=make_set(FileName), DeviceName_=make_set(DeviceName), SHA1_=make_set(SHA1), ShareName_=make_set(ShareName), count() by RequestSourceIP\",\"size\":1,\"title\":\"DeviceFileEvents - File transfers - SMB/Windows Admin Shares \",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"customWidth\":\"33\",\"name\":\"query - 0 - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceEvents\\n| where DeviceName has_any ({Host_IOC}) \\n| where ActionType == \\\"AntivirusDetection\\\"\\n| summarize TotalDetections = count() by DeviceName , FileName, SHA1 \",\"size\":1,\"title\":\"DeviceEvents - Antivirus events\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"customWidth\":\"33\",\"name\":\"query - 0 - Copy - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityLogonEvents \\n| where DeviceName has_any ({Host_IOC}) \\n| summarize\\n     TotalDevicesAccessed = dcount(DestinationDeviceName),\\n     DevicesAccessed = make_set(DestinationDeviceName),\\n     ProtocolsUsed = make_set(Protocol)\\n     by DeviceName\",\"size\":1,\"title\":\"IdentityLogonEvents - Devices that have been accessed by a compromised device\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"customWidth\":\"33\",\"name\":\"query - 0 - Copy - Copy - Copy - Copy - Copy\"}]},\"name\":\"Host entities\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### User account activities\",\"style\":\"success\"},\"name\":\"text - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union isfuzzy=true SigninLogs, AADNonInteractiveUserSignInLogs\\n| where ResultType == 0\\n| where UserPrincipalName has_any ({UserAccount})\\n// In case of all details remove line below\\n| project TimeGenerated, UserPrincipalName, Category, Location, IPAddress, AppDisplayName, ClientAppUsed, RiskState\\n\",\"size\":1,\"showAnalytics\":true,\"title\":\"SigninLogs - Sign Ins by comrpomised account\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"exportToExcelOptions\":\"all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"filter\":true}},\"customWidth\":\"33\",\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\n| where SenderFromAddress has_any ({UserAccount})\\n| where AttachmentCount > 0\\n| join kind=leftouter EmailAttachmentInfo on NetworkMessageId\\n| project      TimeGenerated,     NetworkMessageId,     SenderFromAddress,     RecipientEmailAddress,     Subject,     ThreatTypes,     SHA256\\n| join kind=leftouter DeviceFileEvents on SHA256\\n| summarize\\n     EmailReciepients = make_set(RecipientEmailAddress),\\n     Subject= make_set(Subject),\\n     FileOnDevices = make_set(DeviceName)\\n     by SHA256, NetworkMessageId\\n| extend\\n     TotalReciepients = array_length(EmailReciepients),\\n     DeviceWithFileInteraction = array_length(FileOnDevices)\",\"size\":1,\"showAnalytics\":true,\"title\":\"EmailEvents/DeviceFileEvents - Attachments sent from a compromised mailbox\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"exportToExcelOptions\":\"all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"filter\":true}},\"customWidth\":\"33\",\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"AuditLogs\\n| extend InitiatingUser = parse_json(InitiatedBy.user)\\n| extend InitatingUPN = parse_json(InitiatingUser).userPrincipalName\\n| where InitatingUPN has_any ({UserAccount})\\n| project-reorder TimeGenerated, InitatingUPN, OperationName, ResultDescription, ActivityDisplayName, Resource, Result\\n\",\"size\":1,\"showAnalytics\":true,\"title\":\"AuditLogs - List AuditLog activities by user\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"exportToExcelOptions\":\"all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"customWidth\":\"33\",\"name\":\"query - 0 - Copy\"}]},\"name\":\"Account entities\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"piv\"},\"name\":\"group - 13\"}],\"isLocked\":false,\"fallbackResourceIds\":[],\"fromTemplateId\":\"sentinel-UserWorkbook\"}",
        "version": "1.0",
        "sourceId": "[variables('workbookSourceId')]",
        "category": "[parameters('workbookType')]"
      }
    }
  ],
  "outputs": {
    "workbookId": {
      "type": "string",
      "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
    }
  },
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
}